{"version":3,"sources":["AppConstants.js","logo.svg","AppHeader.js","AppFilter.js","AppInput.js","AppUtility.js","AppListItem.js","AppList.js","App.js","reportWebVitals.js","index.js"],"names":["STATUS","APP_CONSTANT","APP","DEFAULT_STATUS","DEFAULT_FILTER","APP_NAME","DEV_NAME","Status_Full","Status_Acr","AppHeader","className","src","logo","this","props","appname","devname","React","Component","AppFilter","selectedFilter","onFilterChange","ToggleButtonGroup","name","type","defaultValue","onChange","bind","ToggleButton","value","size","variant","AppInput","state","event","console","log","preventDefault","onSubmit","setState","target","placeholder","newId","new_id","i","Math","floor","random","AppListItem","updateStatus","updatedStatus","onStatusUpdate","id","onDelete","status","currentFilter","Dropdown","drop","Toggle","Menu","Object","values","map","Item","onSelect","eventKey","onClick","AppList","tasks","task","App","applyFilter","taskToUpdate","filter","otherTasks","updateStorage","onNewTask","taksName","newTask","prevState","JSON","parse","window","localStorage","getItem","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bebb226.chunk.js","sourcesContent":["const STATUS = {\r\n    NOT_STARTED : 'Not Started',\r\n    IN_PROGRESS : 'In Progress',\r\n    COMPLETED : 'Completed',\r\n}\r\n\r\nconst APP_CONSTANT = {\r\n    APP : 'TODO_LIST',\r\n    DEFAULT_STATUS : 'ns',\r\n    DEFAULT_FILTER : 'ns',\r\n    APP_NAME : 'worklist',\r\n    DEV_NAME : 'suban khoja',\r\n    \r\n    Status_Full : {\r\n        'ns' : STATUS.NOT_STARTED,\r\n        'ip' : STATUS.IN_PROGRESS,\r\n        'cp' : STATUS.COMPLETED\r\n    },\r\n\r\n    Status_Acr : {\r\n        [STATUS.NOT_STARTED] : 'ns',\r\n        [STATUS.IN_PROGRESS] : 'ip',\r\n        [STATUS.COMPLETED] : 'cp'\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default APP_CONSTANT;","export default __webpack_public_path__ + \"static/media/logo.d3dfc775.svg\";","import React from 'react';\r\nimport APP_CONSTANT from './AppConstants.js';\r\nimport logo from './logo.svg';\r\n\r\nclass AppHeader extends React.Component{\r\n    render(){\r\n        return (\r\n            <header className=\"p-left-5 p-right-5 p-top-8 p-bottom-8 flex justify-between align-center text-white\">\r\n                <div className=\"company-container flex align-center\">\r\n                    <img className=\"img\" src={logo} />\r\n                    <span className=\"company-name bold\">{this.props.appname}</span>\r\n                </div>        \r\n                <span className=\"dev-name bold\">{this.props.devname}</span>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport APP_CONSTANT from './AppConstants.js';\r\n\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\n\r\nclass AppFilter extends React.Component{\r\n\r\n    onFilterChange(selectedFilter){\r\n        this.props.onFilterChange(selectedFilter);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container flex justify-center flex-column m-top-1em\">\r\n                <div className=\"filter-container flex justify-center\">\r\n                    <ToggleButtonGroup name=\"filter\" type=\"radio\" defaultValue={APP_CONSTANT.DEFAULT_FILTER} className=\"mb-2 filter-actions\" onChange={this.onFilterChange.bind(this)}>\r\n                        <ToggleButton name=\"ns\" value=\"ns\" size=\"sm\" variant=\"outline-primary\" type=\"radio\" className=\"custom-primary-outline\">Not Started</ToggleButton>\r\n                        <ToggleButton name=\"ip\" value=\"ip\" size=\"sm\" variant=\"outline-primary\" type=\"radio\" className=\"custom-primary-outline\">In Progess</ToggleButton>\r\n                        <ToggleButton name=\"cp\" value=\"cp\" size=\"sm\" variant=\"outline-primary\" type=\"radio\" className=\"custom-primary-outline\">Completed</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppFilter;","import React from 'react';\r\n\r\n\r\nclass AppInput extends React.Component{\r\n\r\n    state = {\r\n        name : \"\"\r\n    }\r\n\r\n    onSubmit(event){\r\n        console.log(this.state.name);\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.name);\r\n        this.setState({name : ''});\r\n    }\r\n\r\n    onChange(event){\r\n        this.setState({name : event.target.value});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"flex justify-center\">\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <input value={this.state.name} className=\"p-top-5 p-bottom-5 p-left-5 p-right-5 outline-none border-radius-3 m-16\" type=\"text\" placeholder=\"Type new task here. Press enter to create.\" onChange={this.onChange.bind(this)} />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AppInput;","const newId = () => {\r\n    let str = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    let id_length = 7;\r\n    let new_id = '';\r\n    for(let i=0;i<id_length;i++){\r\n        new_id += str[Math.floor(Math.random() * 62)];\r\n    }\r\n    return new_id;\r\n}\r\n\r\nexport default newId;","import React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport APP_CONSTANT from './AppConstants.js';\r\nclass AppListItem extends React.Component{\r\n\r\n    updateStatus = (updatedStatus) => {\r\n        this.props.onStatusUpdate(this.props.id,updatedStatus);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.id);\r\n    }\r\n\r\n    render(){\r\n        if(this.props.status === this.props.currentFilter)\r\n            return (\r\n                <li className=\"task flex border-box justify-between align-center border-radius-3 p-top-5 p-right-5 p-left-5 p-bottom-5 m-top-5 m-bottom-5\" key={this.props.id}>\r\n                    <span className=\"task-name p-0\">{this.props.name}</span>\r\n                    <div className=\"flex align-center\">\r\n                        <div className=\"status-container flex justify-between\">\r\n                            <Dropdown drop=\"down\">\r\n                            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" size=\"sm\">\r\n                            {APP_CONSTANT.Status_Full[this.props.status]}\r\n                            </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        Object.values(APP_CONSTANT.Status_Full)\r\n                                        .map( \r\n                                            status => \r\n                                            <Dropdown.Item onSelect={this.updateStatus.bind(this)} eventKey={APP_CONSTANT.Status_Acr[status]} key={status}>{status}</Dropdown.Item>\r\n                                        )\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                        <div className=\"task-actions\">\r\n                            <span className=\"underline cursor-pointer link-delete\" onClick={this.onDelete.bind(this)}>Delete</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default AppListItem;","import React from 'react';\r\nimport AppListItem from './AppListItem';\r\n\r\nclass AppList extends React.Component{\r\n\r\n    onStatusUpdate = (id,updatedStatus) => {\r\n        this.props.onStatusUpdate(id,updatedStatus);\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        this.props.onDelete(id);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ul className=\"task-container list-none flex justify-center align-center flex-column\">\r\n            {\r\n                (this.props.tasks) \r\n                &&\r\n                this.props.tasks.map(task => \r\n                    <AppListItem \r\n                    onStatusUpdate={this.onStatusUpdate.bind(this)} \r\n                    currentFilter={this.props.currentFilter} \r\n                    onDelete = {this.onDelete.bind(this)}\r\n                    key={task.id} \r\n                    id={task.id} \r\n                    name={task.name} \r\n                    status={task.status} />\r\n                )\r\n            }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppList;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppHeader from './AppHeader.js';\nimport AppFilter from './AppFilter';\nimport React from 'react';\nimport APP_CONSTANT from './AppConstants';\n\nimport AppInput from './AppInput';\nimport newId from './AppUtility';\nimport AppList from './AppList';\n\n\nclass App extends React.Component{\n\n  componentDidMount(){\n    this.setState({tasks : JSON.parse(window.localStorage.getItem(APP_CONSTANT.APP))});\n  }\n\n  state = {\n    currentFilter: APP_CONSTANT.DEFAULT_FILTER\n  }\n\n  applyFilter = (selectedFilter) => {\n    this.setState({currentFilter : selectedFilter});\n  }\n\n  onStatusUpdate = (id,updatedStatus) => {\n    let taskToUpdate = this.state.tasks.filter(task => task.id === id);\n    let otherTasks = this.state.tasks.filter(task => task.id !== id);\n    taskToUpdate[0].status = updatedStatus;\n    this.setState({\n        tasks : [...taskToUpdate,...otherTasks],\n    },() => {\n      this.updateStorage();\n    });\n  }\n\n  onDelete = (id) => {\n    let otherTasks = this.state.tasks.filter(task => task.id !== id);\n    this.setState({\n      tasks : [...otherTasks],\n    },() => {\n      this.updateStorage();\n    });\n  }\n\n  updateStorage(){\n    window.localStorage.setItem(APP_CONSTANT.APP , JSON.stringify(this.state.tasks));\n  }\n\n  onNewTask = (taksName) => {\n    const newTask = {\n      id : newId(),\n      name : taksName,\n      status : APP_CONSTANT.DEFAULT_STATUS\n    };\n    const tasks = this.state.tasks || [];\n    this.setState(prevState => ({\n      tasks: [...tasks, newTask]\n    }),() => {\n      this.updateStorage();\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        \n        <AppHeader \n          devname={APP_CONSTANT.DEV_NAME}\n          appname={APP_CONSTANT.APP_NAME}\n        />\n\n        <AppInput \n          onSubmit={this.onNewTask.bind(this)}\n        />\n\n        <AppFilter \n          currentFilter={this.state.currentFilter} \n          onFilterChange={this.applyFilter.bind(this)}\n        />\n        \n        <AppList \n          tasks={this.state.tasks}\n          onStatusUpdate={this.onStatusUpdate.bind(this)} \n          currentFilter={this.state.currentFilter} \n          onDelete = {this.onDelete.bind(this)}\n        />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}